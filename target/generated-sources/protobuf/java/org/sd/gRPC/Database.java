// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

package org.sd.gRPC;

public final class Database {
  private Database() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sd_gRPC_CommandRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_sd_gRPC_CommandRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_sd_gRPC_CommandResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_sd_gRPC_CommandResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016database.proto\022\013org.sd.gRPC\"O\n\016Command" +
      "Request\022\021\n\toperation\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022" +
      "\r\n\005value\030\003 \001(\t\022\016\n\006source\030\004 \001(\t\"!\n\017Comman" +
      "dResponse\022\016\n\006buffer\030\001 \001(\t2d\n\025ExecuteComm" +
      "andService\022K\n\016ExecuteCommand\022\033.org.sd.gR" +
      "PC.CommandRequest\032\034.org.sd.gRPC.CommandR" +
      "esponseB\002P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_sd_gRPC_CommandRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_sd_gRPC_CommandRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_sd_gRPC_CommandRequest_descriptor,
        new java.lang.String[] { "Operation", "Key", "Value", "Source", });
    internal_static_org_sd_gRPC_CommandResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_sd_gRPC_CommandResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_sd_gRPC_CommandResponse_descriptor,
        new java.lang.String[] { "Buffer", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
